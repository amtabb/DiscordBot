import discord
import os
import requests
import json
import random
from logging_action import record_log
from zKeep_alive import keep_alive
from replit import db


from discord.ext import commands


prefix = "s!","umeko "
bot = commands.Bot(prefix)

# static(?) methods for things to happen

def get_quote():
  response = requests.get("https://zenquotes.io/api/random")
  json_data = json.loads(response.text)
  quote = json_data[0]["q"] + " -" + json_data[0]["a"]
  return(quote)

# static(?) methods for things to happen


# Command stuffs
@bot.command()
async def ping(ctx):
	await ctx.channel.send("PogChamp")

#new say command 
@bot.command()
async def say(ctx, *, text=''):
    if text == '':
        await ctx.send("please don't leave it blank")
    else:
        await ctx.send(text)
        await ctx.message.delete()

@bot.command()
async def inspire(ctx):
    quote = get_quote()
    await ctx.channel.send(quote)

# fun/social command(s)
@bot.command(aliases=['8ball'])
async def _8ball(ctx):
  responses = ['it is certain.',
               'it is decidedly so.',
               "Without a doubt.",
               "Yes, definitely.",
               "You may rely on it.",
               "As I see it, yes.",
               "Most likely.",
               "Outlook good.",
               "Yes.",
               "Signs point to yes.",
               "Reply hazy, try again.",
               "Ask again later.",
               "Better not tell you now.",
               "Cannot predict now.",
               "Concentrate and ask again.",
               "Don't count on it.",
               "My reply is no.",
               "My sources say no.",
               "Outlook not so good.",
               "Very doubtful."]
  await ctx.send(f"{random.choice(responses)}")

@bot.command(aliases=['slap'])
async def _slap(ctx):
  slapping = ['https://imgur.com/fm49srQ',
              'https://i.pinimg.com/originals/cd/13/ad/cd13adaeb8b4208db2270d7c94963101.gif',
              'https://imgur.com/Agwwaj6',
              'https://media1.tenor.com/images/af36628688f5f50f297c5e4bce61a35c/tenor.gif?itemid=17314633',
              'https://giphy.com/gifs/funimation-slap-iMCedi21L9MXg1gN43']  
  await ctx.send(f"{random.choice(slapping)}")

@bot.command()
async def embedtest(ctx):
    embed=discord.Embed(color=0xFF5733)
    embed.set_image(url="https://i.pinimg.com/originals/cd/13/ad/cd13adaeb8b4208db2270d7c94963101.gif")
    image_properties = embed.image
    image_properties.height = 300
    image_properties.width = 500
    await ctx.send(embed=embed)


# Prefix Commands
if "responding" not in db.keys():
  db["responding"] = True

@bot.event
async def on_ready():
  print("We have logged in as {0.user}".format(bot))

@bot.event
async def on_message(message):
  if message.author == bot.user:
    return

  msg = message.content

  # message content but as a list and lowered for proper keyword detection
  msg_tolowered = [word_to_lower.lower() for word_to_lower in msg.split(" ")]

  if msg.startswith("s!responding"):
    value = msg.split("s!responding", 1)[1]

    if value.lower() == "true":
      db["responding"] = True
      await message.channel.send("Responding is on.")
    else:
      db["responding"] = False
      await message.channel.send("Responding is off.")
  
  if "dragon" in msg:
    dragon_id = bot.get_emoji(787673213261185054)
    await message.channel.send("{emoji}".format(emoji = dragon_id))

  # TODO: BETTER IMPLEMENTATION. USE LIST COMPREHENSION MAYBE
  if "sad" in msg:
    for word in msg_tolowered:
      if word == "sad":
        await message.channel.send("https://tenor.com/view/slap-handaseishuu-narukotoishi-barakamonanime-barakamon-gif-5509136")

  if "uwu" in msg_tolowered:
    await message.channel.send("UwU")


  #RESPONSIBLE FOR HANDLING BOT COMMANDS
  await bot.process_commands(message)
  #how the heck did this get removed on its own ^ LOL

#Things that run without need for events
keep_alive()
record_log()

bot.run(os.getenv("TOKEN"))